// generated 2007/10/9 16:01:41 CEST by guillaume@pc-ludo-max2.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/guillaume/GEOTUI/SourceForge/redressement_demo/redressement_demo.glade
// for gtk 2.4.13 and gtkmm 2.2.12
//
// Please modify the corresponding derived classes in ./src/Window1.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include "Window1_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/box.h>

Window1_glade::Window1_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *Window1 = this;
   gmm_data = new GlademmData(get_accel_group());
   viewport1 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   viewport2 = Gtk::manage(new class Gtk::Viewport(*manage(new Gtk::Adjustment(0,0,1)), *manage(new Gtk::Adjustment(0,0,1))));
   
   Gtk::HBox *hbox2 = Gtk::manage(new class Gtk::HBox(false, 8));
   viewport1->set_border_width(8);
   viewport1->set_shadow_type(Gtk::SHADOW_ETCHED_OUT);
   viewport2->set_border_width(8);
   viewport2->set_shadow_type(Gtk::SHADOW_ETCHED_OUT);
   hbox2->set_border_width(8);
   hbox2->pack_start(*viewport1);
   hbox2->pack_start(*viewport2);
   Window1->set_title(_("Rectify Points Coordinates - Demo"));
   Window1->set_modal(false);
   Window1->property_window_position().set_value(Gtk::WIN_POS_NONE);
   Window1->set_resizable(true);
   Window1->property_destroy_with_parent().set_value(false);
   Window1->add(*hbox2);
   viewport1->show();
   viewport2->show();
   hbox2->show();
   Window1->show();
}

Window1_glade::~Window1_glade()
{  delete gmm_data;
}
